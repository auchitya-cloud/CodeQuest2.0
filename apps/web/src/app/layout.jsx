// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//     variable: "--font-geist-sans",
//     subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//     variable: "--font-geist-mono",
//     subsets: ["latin"],
// });

// export const metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//     return ( <html lang = "en" >
//         <body className = { `${geistSans.variable} ${geistMono.variable} antialiased` } >
//         { children } </body> </html>
//     );
// };

'use client';

import { useEffect, useState } from "react";
import Link from "next/link";
import { Geist, Geist_Mono } from "next/font/google";
import { TerminalSquare, Moon, Sun } from "lucide-react";
import "./globals.css";

/* Fonts (kept from your setup) */
const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

export const metadata = {
  title: "CodeQuest",
  description: "Interactive DSA learner & visualizer",
};

/* Small theme hook: store preference and toggle .dark class on <html> */
function useTheme() {
  const [theme, setTheme] = useState("system"); // 'light' | 'dark' | 'system'

  useEffect(() => {
    const stored = typeof window !== "undefined" ? localStorage.getItem("theme") : null;
    if (stored) setTheme(stored);
  }, []);

  useEffect(() => {
    const root = document.documentElement;
    const prefersDark = window.matchMedia?.("(prefers-color-scheme: dark)").matches;
    const isDark = theme === "dark" || (theme === "system" && prefersDark);
    root.classList.toggle("dark", isDark);
    localStorage.setItem("theme", theme);
  }, [theme]);

  const resolved = typeof window !== "undefined"
    ? (theme === "system"
        ? (window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light")
        : theme)
    : "light";

  return { theme, setTheme, resolved };
}

function Navbar({ theme, setTheme }) {
  return (
    <header className="sticky top-0 z-40 border-b border-zinc-200/70 dark:border-zinc-800/70 bg-white/70 dark:bg-zinc-950/60 backdrop-blur">
      <div className="container-max flex h-16 items-center justify-between">
        <div className="flex items-center gap-3">
          <TerminalSquare className="h-6 w-6 text-emerald-600 dark:text-emerald-400" />
          <Link href="/" className="font-semibold tracking-tight">CodeQuest</Link>
        </div>

        <nav className="hidden md:flex items-center gap-6 text-sm text-zinc-600 dark:text-zinc-300">
          <Link href="/visualizer" className="hover:text-zinc-900 dark:hover:text-zinc-50">Visualizer</Link>
          <Link href="/questions"  className="hover:text-zinc-900 dark:hover:text-zinc-50">Questions</Link>
          <Link href="/forum"      className="hover:text-zinc-900 dark:hover:text-zinc-50">Forum</Link>
          <Link href="/profile"    className="hover:text-zinc-900 dark:hover:text-zinc-50">Profile</Link>
        </nav>

        <div className="flex items-center gap-2">
          <button
            className="btn btn-hover"
            onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
            aria-label="Toggle theme"
          >
            {theme === "dark" ? <Sun className="h-4 w-4" /> : <Moon className="h-4 w-4" />}
            <span className="hidden sm:inline">{theme === "dark" ? "Light" : "Dark"}</span>
          </button>
          <button className="btn btn-accent">Sign In</button>
        </div>
      </div>
    </header>
  );
}

function Footer() {
  return (
    <footer className="mt-10 border-top">
      <div className="container-max py-8 text-sm text-zinc-600 dark:text-zinc-400 flex flex-col sm:flex-row items-center justify-between gap-4">
        <div className="flex items-center gap-2">
          <TerminalSquare className="h-5 w-5 text-emerald-600 dark:text-emerald-400" />
          <span>Â© {new Date().getFullYear()} CodeQuest</span>
        </div>
        <nav className="flex items-center gap-6">
          <a href="#" className="hover:text-zinc-900 dark:hover:text-zinc-200">Docs</a>
          <a href="#" className="hover:text-zinc-900 dark:hover:text-zinc-200">Privacy</a>
          <a href="#" className="hover:text-zinc-900 dark:hover:text-zinc-200">Contact</a>
        </nav>
      </div>
    </footer>
  );
}

export default function RootLayout({ children }) {
  const { theme, setTheme, resolved } = useTheme();

  return (
    <html lang="en" className={resolved === "dark" ? "dark" : ""} suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Navbar theme={resolved} setTheme={setTheme} />
        <main>{children}</main>
        <Footer />
      </body>
    </html>
  );
}
